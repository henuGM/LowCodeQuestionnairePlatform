{"version":3,"file":"static/js/52.a59ae4d0.chunk.js","mappings":"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","sources":["components/QuestionComponents/QuestionInput/interface.ts","components/QuestionComponents/QuestionInput/Component.tsx","components/QuestionComponents/QuestionInput/PropComponent.tsx","components/QuestionComponents/QuestionInput/index.ts","components/QuestionComponents/QuestionTitle/interface.ts","components/QuestionComponents/QuestionTitle/Component.tsx","components/QuestionComponents/QuestionTitle/PropComponent.tsx","components/QuestionComponents/QuestionTitle/index.ts","components/QuestionComponents/QuestionParagraph/interface.ts","components/QuestionComponents/QuestionParagraph/Component.tsx","components/QuestionComponents/QuestionParagraph/PropComponent.tsx","components/QuestionComponents/QuestionParagraph/index.ts","components/QuestionComponents/QuestionInfo/interface.ts","components/QuestionComponents/QuestionInfo/Component.tsx","components/QuestionComponents/QuestionInfo/PropComponent.tsx","components/QuestionComponents/QuestionInfo/index.ts","components/QuestionComponents/QuestionTextarea/interface.ts","components/QuestionComponents/QuestionTextarea/Component.tsx","components/QuestionComponents/QuestionTextarea/index.ts","components/QuestionComponents/QuestionTextarea/PropComponent.tsx","components/QuestionComponents/QuestionRadio/interface.ts","components/QuestionComponents/QuestionRadio/Component.tsx","components/QuestionComponents/QuestionRadio/PropComponent.tsx","components/QuestionComponents/QuestionRadio/StatComponent.tsx","components/QuestionComponents/QuestionRadio/index.ts","components/QuestionComponents/QuestionCheckbox/interface.ts","components/QuestionComponents/QuestionCheckbox/Component.tsx","components/QuestionComponents/QuestionCheckbox/PropComponent.tsx","components/QuestionComponents/QuestionCheckbox/StatComponent.tsx","components/QuestionComponents/QuestionCheckbox/index.ts","components/QuestionComponents/index.ts","hooks/useGetComponentInfo.tsx","hooks/useGetPageInfo.tsx","hooks/useLoadQuestionData.tsx"],"sourcesContent":["export type QuestionInputPropsType={\r\n    title?:string\r\n    placeholder?:string\r\n    onChange?:(newProps:QuestionInputPropsType)=>void\r\n    disabled?:boolean\r\n}\r\n\r\nexport const QuestionInputDefaultProps:QuestionInputPropsType={\r\n    title:'输入框标题',\r\n    placeholder:'请输入...'\r\n}","import {FC} from 'react';\r\nimport { Input, Typography } from \"antd\";\r\nimport { QuestionInputDefaultProps, QuestionInputPropsType } from \"./interface\";\r\n\r\nconst {Paragraph} =Typography;\r\nconst QuestionInput:FC<QuestionInputPropsType>=(props:QuestionInputPropsType)=>{\r\n    const {title,placeholder}={...QuestionInputDefaultProps,...props};\r\n    return (\r\n        <div>\r\n            <Paragraph strong>{title}</Paragraph>\r\n            <div>\r\n                <Input placeholder={placeholder}></Input>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\nexport default QuestionInput;","import React, {FC,useEffect} from \"react\";\r\nimport {Form, Input} from \"antd\";\r\nimport { QuestionInputPropsType } from \"./interface\";\r\n\r\n\r\nconst PropComponent:FC<QuestionInputPropsType>=(props:QuestionInputPropsType)=>{\r\n    const {title,placeholder,onChange,disabled}=props;\r\n    const [form]=Form.useForm();\r\n\r\n    useEffect(()=>{\r\n        form.setFieldsValue({title,placeholder})\r\n    },[title,placeholder]);\r\n\r\n    function handleValueChange(){\r\n        if(onChange){\r\n            onChange(form.getFieldsValue());\r\n        }\r\n    }\r\n\r\n    return (\r\n        <Form layout=\"vertical\" disabled={disabled} initialValues={{title,placeholder}} form={form} onValuesChange={handleValueChange}>\r\n            <Form.Item label=\"标题\" name=\"title\" rules={[{required:true,message:\"请输入标题\"}]}>\r\n                <Input/>\r\n            </Form.Item>\r\n            <Form.Item label=\"Placeholder\" name=\"placeholder\">\r\n                <Input/>\r\n            </Form.Item>\r\n        </Form>\r\n    )\r\n}\r\n\r\nexport default PropComponent;","import Component from \"./Component\";\r\nimport PropComponent from \"./PropComponent\";\r\nimport { QuestionInputDefaultProps } from \"./interface\";\r\n\r\nexport * from './interface';\r\n\r\nexport default {\r\n    title:\"输入框\",\r\n    type:'questionInput',\r\n    Component,\r\n    PropComponent,\r\n    defaultProps:QuestionInputDefaultProps\r\n}","export type QuestionTitlePropsType={\r\n    text?:string\r\n    level?:1|2|3|4|5\r\n    isCenter?:boolean\r\n    onChange?:(newProps:QuestionTitlePropsType)=>void\r\n    disabled?:boolean\r\n}\r\n\r\nexport const QuestionTitleDefaultProps:QuestionTitlePropsType={\r\n    text:'一行标题',\r\n    level:1,\r\n    isCenter:false\r\n}","import React, { FC } from \"react\";\r\nimport { Typography } from \"antd\";\r\nimport { QuestionTitlePropsType, QuestionTitleDefaultProps } from \"./interface\";\r\n\r\nconst { Title } = Typography;\r\n\r\nconst QuestionTitle: FC<QuestionTitlePropsType> = (\r\n  props: QuestionTitlePropsType\r\n) => {\r\n  const {\r\n    text = \"\",\r\n    level = 1,\r\n    isCenter = false,\r\n  } = { ...QuestionTitleDefaultProps, ...props };\r\n  const genFontSize = (level: number) => {\r\n    if (level === 1) return \"24px\";\r\n    if (level === 2) return \"20px\";\r\n    if (level === 3) return \"16px\";\r\n    return \"16px\";\r\n  };\r\n  const genMarginBottom = (level: number) => {\r\n    if (level === 1) return \"5px\";\r\n    if (level === 2) return \"2px\";\r\n    if (level === 3) return \"-1px\";\r\n    return \"0px\";\r\n  };\r\n  return (\r\n    <Title\r\n      level={level}\r\n      style={{\r\n        textAlign: isCenter ? \"center\" : \"start\",\r\n        fontSize: genFontSize(level),\r\n        // lineHeight:1,\r\n        height:'22px',\r\n        marginTop:\"0px\",\r\n        marginBottom:genMarginBottom(level)\r\n      }}\r\n    >\r\n      {text}\r\n    </Title>\r\n  );\r\n};\r\n\r\nexport default QuestionTitle;\r\n","import React, { FC, useEffect } from \"react\";\r\nimport { QuestionTitlePropsType } from \"./interface\";\r\nimport { Checkbox, Form, Input, Select } from \"antd\";\r\nimport { useForm } from \"antd/es/form/Form\";\r\n\r\nconst PropComponent: FC<QuestionTitlePropsType> = (\r\n  props: QuestionTitlePropsType\r\n) => {\r\n  const { text, level, isCenter, onChange, disabled } = props;\r\n  const [form] = useForm();\r\n  useEffect(() => {\r\n    form.setFieldsValue({ text, level, isCenter });\r\n  }, [text, level, isCenter]);\r\n\r\n  function handleValueChange(){\r\n    if(onChange){\r\n        onChange(form.getFieldsValue());\r\n    }\r\n}\r\n  return (\r\n    <Form\r\n      layout=\"vertical\"\r\n      initialValues={{ text, level, isCenter }}\r\n      form={form}\r\n      onValuesChange={handleValueChange}\r\n      disabled={disabled}\r\n    >\r\n      <Form.Item\r\n        label=\"标题内容\"\r\n        name=\"text\"\r\n        rules={[{ required: true, message: \"请输入标题内容\" }]}\r\n      >\r\n        <Input />\r\n      </Form.Item>\r\n      <Form.Item label=\"层级\" name=\"level\">\r\n        <Select\r\n          options={[\r\n            { value: 1, text: 1 },\r\n            { value: 2, text: 2 },\r\n            { value: 3, text: 3 },\r\n          ]}\r\n        />\r\n      </Form.Item>\r\n      <Form.Item name=\"isCenter\" valuePropName=\"checked\">\r\n        <Checkbox>居中显示</Checkbox>\r\n      </Form.Item>\r\n    </Form>\r\n  );\r\n};\r\n\r\nexport default PropComponent;\r\n","import Component from \"./Component\";\r\nimport PropComponent from \"./PropComponent\";\r\nimport { QuestionTitleDefaultProps } from \"./interface\";\r\n\r\nexport * from './interface';\r\n\r\nexport default {\r\n    title:\"标题\",\r\n    type:'questionTitle',\r\n    Component,\r\n    PropComponent,\r\n    defaultProps:QuestionTitleDefaultProps\r\n}","export type QuestionParagraphPropsType = {\n  text?: string\n  isCenter?: boolean\n\n  // 用于 PropComponent\n  onChange?: (newProps: QuestionParagraphPropsType) => void\n  disabled?: boolean\n}\n\nexport const QuestionParagraphDefaultProps: QuestionParagraphPropsType = {\n  text: '一行段落',\n  isCenter: false,\n}\n","import React, { FC } from 'react'\nimport { Typography } from 'antd'\nimport { QuestionParagraphPropsType, QuestionParagraphDefaultProps } from './interface'\n\nconst { Paragraph } = Typography\n\nconst Component: FC<QuestionParagraphPropsType> = (props: QuestionParagraphPropsType) => {\n  const { text = '', isCenter = false } = { ...QuestionParagraphDefaultProps, ...props }\n\n  const textList = text.split('\\n')\n\n  return (\n    <Paragraph style={{ textAlign: isCenter ? 'center' : 'start', marginBottom: '0' }}>\n      {textList.map((value, index) => (\n        <span key={index}>\n          {index > 0 && <br />}\n          {value}\n        </span>\n      ))}\n    </Paragraph>\n  )\n}\n\nexport default Component;\n","import React, { FC, useEffect } from 'react'\nimport { Form, Input, Checkbox } from 'antd'\nimport { QuestionParagraphPropsType } from './interface'\n\nconst { TextArea } = Input\n\nconst PropComponent: FC<QuestionParagraphPropsType> = (props: QuestionParagraphPropsType) => {\n  const { text, isCenter, onChange, disabled } = props\n  const [form] = Form.useForm()\n\n  useEffect(() => {\n    form.setFieldsValue({ text, isCenter })\n  }, [text, isCenter])\n\n  function handleValuesChange() {\n    if (onChange) {\n      onChange(form.getFieldsValue())\n    }\n  }\n\n  return (\n    <Form\n      layout=\"vertical\"\n      initialValues={{ text, isCenter }}\n      onValuesChange={handleValuesChange}\n      disabled={disabled}\n      form={form}\n    >\n      <Form.Item\n        label=\"段落内容\"\n        name=\"text\"\n        rules={[{ required: true, message: '请输入段落内容' }]}\n      >\n        <TextArea />\n      </Form.Item>\n      <Form.Item name=\"isCenter\" valuePropName=\"checked\">\n        <Checkbox>居中显示</Checkbox>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default PropComponent\n","import Component from './Component'\nimport PropComponent from './PropComponent'\nimport { QuestionParagraphDefaultProps } from './interface'\n\nexport * from './interface'\n\nexport default {\n  title: '段落',\n  type: 'questionParagraph', \n  Component,\n  PropComponent,\n  defaultProps: QuestionParagraphDefaultProps,\n}\n","export type QuestionInfoPropsType = {\n  title?: string\n  desc?: string\n  onChange?: (newProps: QuestionInfoPropsType) => void\n  disabled?: boolean\n}\n\nexport const QuestionInfoDefaultProps: QuestionInfoPropsType = {\n  title: '问卷标题',\n  desc: '问卷描述',\n}\n","import React, { FC } from 'react'\nimport { Typography } from 'antd'\nimport { QuestionInfoPropsType, QuestionInfoDefaultProps } from './interface'\n\nconst { Title, Paragraph } = Typography\n\nconst Component: FC<QuestionInfoPropsType> = (props: QuestionInfoPropsType) => {\n  const { title, desc = '' } = { ...QuestionInfoDefaultProps, ...props }\n\n  const descTextList = desc.split('\\n')\n\n  return (\n    <div style={{ textAlign: 'center' }}>\n      <Title style={{ fontSize: '24px',marginTop:\"0\",marginBottom:\"5px\" }}>{title}</Title>\n      <Paragraph style={{marginTop:\"0\",marginBottom:\"5px\" }}>\n        {descTextList.map((t, index) => (\n          <span key={index}>\n            {index > 0 && <br />}\n            {t}\n          </span>\n        ))}\n      </Paragraph>\n    </div>\n  )\n}\n\nexport default Component\n","import React, { FC, useEffect } from 'react'\nimport { Form, Input } from 'antd'\nimport { QuestionInfoPropsType } from './interface'\n\nconst { TextArea } = Input\n\nconst PropComponent: FC<QuestionInfoPropsType> = (props: QuestionInfoPropsType) => {\n  const { title, desc, onChange, disabled } = props\n  const [form] = Form.useForm()\n\n  useEffect(() => {\n    form.setFieldsValue({ title, desc })\n  }, [title, desc])\n\n  function handleValuesChange() {\n    if (onChange) {\n      onChange(form.getFieldsValue())\n    }\n  }\n\n  return (\n    <Form\n      layout=\"vertical\"\n      initialValues={{ title, desc }}\n      onValuesChange={handleValuesChange}\n      disabled={disabled}\n      form={form}\n    >\n      <Form.Item label=\"标题\" name=\"title\" rules={[{ required: true, message: '请输入问卷标题' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"描述\" name=\"desc\">\n        <TextArea />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default PropComponent\n","import Component from './Component'\nimport PropComponent from './PropComponent'\nimport { QuestionInfoDefaultProps } from './interface'\n\nexport * from './interface'\n\nexport default {\n  title: '问卷信息',\n  type: 'questionInfo',\n  Component,\n  PropComponent,\n  defaultProps: QuestionInfoDefaultProps,\n}\n","export type QuestionTextareaPropsType = {\n  title?: string\n  placeholder?: string\n\n  onChange?: (newProps: QuestionTextareaPropsType) => void\n  disabled?: boolean\n}\n\nexport const QuestionTextareaDefaultProps: QuestionTextareaPropsType = {\n  title: '多行输入标题',\n  placeholder: '请输入...',\n}\n","import React, { FC } from 'react'\nimport { Typography, Input } from 'antd'\nimport { QuestionTextareaPropsType, QuestionTextareaDefaultProps } from './interface'\n\nconst { Paragraph } = Typography\nconst { TextArea } = Input\n\nconst QuestionTextarea: FC<QuestionTextareaPropsType> = (props: QuestionTextareaPropsType) => {\n  const { title, placeholder } = { ...QuestionTextareaDefaultProps, ...props }\n\n  return (\n    <div>\n      <Paragraph strong>{title}</Paragraph>\n      <div>\n        <TextArea placeholder={placeholder}></TextArea>\n      </div>\n    </div>\n  )\n}\n\nexport default QuestionTextarea\n","import Component from './Component'\nimport PropComponent from './PropComponent'\nimport { QuestionTextareaDefaultProps } from './interface'\n\nexport * from './interface'\n\nexport default {\n  title: '多行输入',\n  type: 'questionTextarea',\n  Component, \n  PropComponent, \n  defaultProps: QuestionTextareaDefaultProps,\n}\n","import React, { FC, useEffect } from 'react'\nimport { Form, Input } from 'antd'\nimport { QuestionTextareaPropsType } from './interface'\n\nconst PropComponent: FC<QuestionTextareaPropsType> = (props: QuestionTextareaPropsType) => {\n  const { title, placeholder, onChange, disabled } = props\n  const [form] = Form.useForm()\n\n  useEffect(() => {\n    form.setFieldsValue({ title, placeholder })\n  }, [title, placeholder])\n\n  function handleValuesChange() {\n    if (onChange) {\n      onChange(form.getFieldsValue())\n    }\n  }\n\n  return (\n    <Form\n      layout=\"vertical\"\n      initialValues={{ title, placeholder }}\n      form={form}\n      onValuesChange={handleValuesChange}\n      disabled={disabled}\n    >\n      <Form.Item label=\"标题\" name=\"title\" rules={[{ required: true, message: '请输入标题' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"Placeholder\" name=\"placeholder\">\n        <Input />\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default PropComponent\n","export type OptionType = {\n  value: string\n  text: string\n}\n\nexport type QuestionRadioPropsType = {\n  title?: string\n  isVertical?: boolean\n  options?: OptionType[]\n  value?: string\n\n  onChange?: (newProps: QuestionRadioPropsType) => void\n  disabled?: boolean\n}\n\nexport const QuestionRadioDefaultProps: QuestionRadioPropsType = {\n  title: '单选标题',\n  isVertical: false,\n  options: [\n    { value: 'item1', text: '选项1' },\n    { value: 'item2', text: '选项2' },\n    { value: 'item3', text: '选项3' },\n  ],\n  value: '',\n}\n\nexport type QuestionRadioStatPropsType = {\n  stat: Array<{ name: string; count: number }>\n}\n","import React, { FC } from 'react'\nimport { Typography, Radio, Space } from 'antd'\nimport { QuestionRadioPropsType, QuestionRadioDefaultProps } from './interface'\n\nconst { Paragraph } = Typography\n\nconst Component: FC<QuestionRadioPropsType> = (props: QuestionRadioPropsType) => {\n  const { title, options = [], value, isVertical } = { ...QuestionRadioDefaultProps, ...props }\n\n  return (\n    <div>\n      <Paragraph strong>{title}</Paragraph>\n      <Radio.Group value={value} >\n        <Space direction={isVertical ? 'vertical' : 'horizontal'}>\n          {options.map(opt => {\n            const { value, text } = opt\n            return (\n              <Radio key={value} value={value}>\n                {text}\n              </Radio>\n            )\n          })}\n        </Space>\n      </Radio.Group>\n    </div>\n  )\n}\n\nexport default Component\n","import React, { FC, useEffect } from 'react'\nimport { nanoid } from 'nanoid'\nimport { Form, Input, Checkbox, Select, Button, Space } from 'antd'\nimport { PlusOutlined, MinusCircleOutlined } from '@ant-design/icons'\nimport { QuestionRadioPropsType, OptionType } from './interface'\n\nconst PropComponent: FC<QuestionRadioPropsType> = (props: QuestionRadioPropsType) => {\n  const { title, isVertical, value, options = [], onChange, disabled } = props\n  const [form] = Form.useForm()\n\n  useEffect(() => {\n    form.setFieldsValue({ title, isVertical, value, options })\n  }, [title, isVertical, value, options])\n\n  function handleValuesChange() {\n    if (onChange == null) return\n\n    const newValues = form.getFieldsValue() as QuestionRadioPropsType\n\n    if (newValues.options) {\n      // 需要清除 text undefined 的选项\n      newValues.options = newValues.options.filter(opt => !(opt.text == null))\n    }\n\n    const { options = [] } = newValues\n    options.forEach(opt => {\n      if (opt.value) return\n      opt.value = nanoid(5) // 补齐 opt value\n    })\n\n    onChange(newValues)\n  }\n\n  return (\n    <Form\n      layout=\"vertical\"\n      initialValues={{ title, isVertical, value, options }}\n      onValuesChange={handleValuesChange}\n      disabled={disabled}\n      form={form}\n    >\n      <Form.Item label=\"标题\" name=\"title\" rules={[{ required: true, message: '请输入标题' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"选项\">\n        <Form.List name=\"options\">\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(({ key, name }, index) => {\n                return (\n                  <Space key={key} align=\"baseline\">\n                    <Form.Item\n                      name={[name, 'text']}\n                      rules={[\n                        { required: true, message: '请输入选项文字' },\n                        {\n                          validator: (_, text) => {\n                            const { options = [] } = form.getFieldsValue()\n                            let num = 0\n                            options.forEach((opt: OptionType) => {\n                              if (opt.text === text) num++\n                            })\n                            if (num === 1) return Promise.resolve()\n                            return Promise.reject(new Error('和其他选项重复了'))\n                          },\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"输入选项文字...\" />\n                    </Form.Item>\n                    {index > 1 && <MinusCircleOutlined onClick={() => remove(name)} />}\n                  </Space>\n                )\n              })}\n\n              <Form.Item>\n                <Button\n                  type=\"link\"\n                  onClick={() => add({ text: '', value: '' })}\n                  icon={<PlusOutlined />}\n                  block\n                >\n                  添加选项\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n      </Form.Item>\n      <Form.Item label=\"默认选中\" name=\"value\">\n        <Select\n          value={value}\n          options={options.map(({ text, value }) => ({ value, label: text || '' }))}\n        ></Select>\n      </Form.Item>\n      <Form.Item name=\"isVertical\" valuePropName=\"checked\">\n        <Checkbox>竖向排列</Checkbox>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default PropComponent\n","import React, { FC, useMemo } from 'react'\nimport { PieChart, Pie, Cell, Tooltip, ResponsiveContainer } from 'recharts'\nimport { STAT_COLORS } from '../../../constant'\nimport { QuestionRadioStatPropsType } from './interface'\n\nfunction format(n: number) {\n  return (n * 100).toFixed(2)\n}\n\nconst StatComponent: FC<QuestionRadioStatPropsType> = ({ stat = [] }) => {\n  // count 求和\n  const sum = useMemo(() => {\n    let s = 0\n    stat.forEach(i => (s += i.count))\n    return s\n  }, [stat])\n\n  return (\n    <div style={{ width: '300px', height: '400px' }}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <PieChart>\n          <Pie\n            dataKey=\"count\"\n            data={stat}\n            cx=\"50%\" // x 轴的偏移\n            cy=\"50%\" // y 轴的偏移\n            outerRadius={50} // 饼图的直径\n            fill=\"#8884d8\"\n            label={i => `${i.name}: ${format(i.count / sum)}%`}\n          >\n            {stat.map((i, index) => {\n              return <Cell key={index} fill={STAT_COLORS[index]} />\n            })}\n          </Pie>\n          <Tooltip />\n        </PieChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nexport default StatComponent\n","import Component from './Component'\nimport PropComponent from './PropComponent'\nimport { QuestionRadioDefaultProps } from './interface'\nimport StatComponent from './StatComponent'\n\nexport * from './interface'\n\nexport default {\n  title: '单选',\n  type: 'questionRadio',\n  Component,\n  StatComponent,\n  PropComponent,\n  defaultProps: QuestionRadioDefaultProps,\n}\n","export type OptionType = {\n  value: string\n  text: string\n  checked: boolean\n}\n\nexport type QuestionCheckboxPropsType = {\n  title?: string\n  isVertical?: boolean\n  list?: OptionType[]\n\n  onChange?: (newProps: QuestionCheckboxPropsType) => void\n  disabled?: boolean\n}\n\nexport const QuestionCheckboxDefaultProps: QuestionCheckboxPropsType = {\n  title: '多选标题',\n  isVertical: false,\n  list: [\n    { value: 'item1', text: '选项1', checked: false },\n    { value: 'item2', text: '选项2', checked: false },\n    { value: 'item3', text: '选项3', checked: false },\n  ],\n}\n\nexport type QuestionCheckboxStatPropsType = {\n  stat: Array<{ name: string; count: number }>\n}\n","import React, { FC } from 'react'\nimport { Typography, Space, Checkbox } from 'antd'\nimport { QuestionCheckboxDefaultProps, QuestionCheckboxPropsType } from './interface'\n\nconst { Paragraph } = Typography\n\nconst Component: FC<QuestionCheckboxPropsType> = (props: QuestionCheckboxPropsType) => {\n  const { title, isVertical, list = [] } = { ...QuestionCheckboxDefaultProps, ...props }\n\n  return (\n    <div>\n      <Paragraph strong>{title}</Paragraph>\n      <Space direction={isVertical ? 'vertical' : 'horizontal'}>\n        {list.map(opt => {\n          const { value, text, checked } = opt\n          return (\n            <Checkbox key={value} value={value} checked={checked}>\n              {text}\n            </Checkbox>\n          )\n        })}\n      </Space>\n    </div>\n  )\n}\n\nexport default Component\n","import React, { FC } from 'react'\nimport { Form, Input, Checkbox, Space, Button } from 'antd'\nimport { nanoid } from 'nanoid'\nimport { MinusCircleOutlined, PlusOutlined } from '@ant-design/icons'\nimport { QuestionCheckboxPropsType, OptionType } from './interface'\n\nconst PropComponent: FC<QuestionCheckboxPropsType> = (props: QuestionCheckboxPropsType) => {\n  const { title, isVertical, list = [], onChange, disabled } = props\n  const [form] = Form.useForm()\n\n  function handleValuesChange() {\n    if (onChange == null) return\n\n    const newValues = form.getFieldsValue() as QuestionCheckboxPropsType\n\n    if (newValues.list) {\n      newValues.list = newValues.list.filter(opt => !(opt.text == null))\n    }\n\n    const { list = [] } = newValues\n    list.forEach(opt => {\n      if (opt.value) return\n      opt.value = nanoid(5)\n    })\n\n    onChange(newValues)\n  }\n\n  return (\n    <Form\n      layout=\"vertical\"\n      form={form}\n      initialValues={{ title, isVertical, list }}\n      disabled={disabled}\n      onValuesChange={handleValuesChange}\n    >\n      <Form.Item label=\"标题\" name=\"title\" rules={[{ required: true, message: '请输入标题' }]}>\n        <Input />\n      </Form.Item>\n      <Form.Item label=\"选项\">\n        <Form.List name=\"list\">\n          {(fields, { add, remove }) => (\n            <>\n              {fields.map(({ key, name }, index) => {\n                return (\n                  <Space key={key} align=\"baseline\">\n                    <Form.Item name={[name, 'checked']} valuePropName=\"checked\">\n                      <Checkbox />\n                    </Form.Item>\n                    <Form.Item\n                      name={[name, 'text']}\n                      rules={[\n                        { required: true, message: '请输入选项文字' },\n                        {\n                          validator: (_, text) => {\n                            const { list = [] } = form.getFieldsValue()\n                            let num = 0\n                            list.forEach((opt: OptionType) => {\n                              if (opt.text === text) num++ // 记录 text 相同的个数，预期只有 1 个（自己）\n                            })\n                            if (num === 1) return Promise.resolve()\n                            return Promise.reject(new Error('和其他选项重复了'))\n                          },\n                        },\n                      ]}\n                    >\n                      <Input placeholder=\"输入选项文字...\" />\n                    </Form.Item>\n\n                    {/* 当前选项 删除按钮 */}\n                    {index > 0 && <MinusCircleOutlined onClick={() => remove(name)} />}\n                  </Space>\n                )\n              })}\n\n              {/* 添加选项 */}\n              <Form.Item>\n                <Button\n                  type=\"link\"\n                  onClick={() => add({ text: '', value: '', checked: false })}\n                  icon={<PlusOutlined />}\n                  block\n                >\n                  添加选项\n                </Button>\n              </Form.Item>\n            </>\n          )}\n        </Form.List>\n      </Form.Item>\n      <Form.Item name=\"isVertical\" valuePropName=\"checked\">\n        <Checkbox>竖向排列</Checkbox>\n      </Form.Item>\n    </Form>\n  )\n}\n\nexport default PropComponent\n","import React, { FC } from 'react'\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, ResponsiveContainer } from 'recharts'\nimport { QuestionCheckboxStatPropsType } from './interface'\n\nconst StatComponent: FC<QuestionCheckboxStatPropsType> = ({ stat }) => {\n  return (\n    <div style={{ width: '400px', height: '300px' }}>\n      <ResponsiveContainer width=\"100%\" height=\"100%\">\n        <BarChart\n          width={400}\n          height={300}\n          data={stat}\n          margin={{\n            top: 5,\n            right: 30,\n            left: 0,\n            bottom: 5,\n          }}\n        >\n          <CartesianGrid strokeDasharray=\"3 3\" />\n          <XAxis dataKey=\"name\" />\n          <YAxis />\n          <Tooltip />\n          {/* <Legend /> */}\n          <Bar dataKey=\"count\" fill=\"#8884d8\" />\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  )\n}\n\nexport default StatComponent\n","import Component from './Component'\nimport PropComponent from './PropComponent'\nimport StatComponent from './StatComponent'\nimport { QuestionCheckboxDefaultProps } from './interface'\n\nexport * from './interface'\n\nexport default {\n  title: '多选',\n  type: 'questionCheckbox', \n  Component,\n  PropComponent,\n  StatComponent,\n  defaultProps: QuestionCheckboxDefaultProps,\n}\n","import { FC } from \"react\";\r\nimport QuestionInputConf, { QuestionInputPropsType } from \"./QuestionInput\";\r\nimport QuestionTitleConf, { QuestionTitlePropsType } from \"./QuestionTitle\";\r\nimport QuestionParagraphConf, {\r\n  QuestionParagraphPropsType,\r\n} from \"./QuestionParagraph\";\r\nimport QuestionInfoConf, { QuestionInfoPropsType } from \"./QuestionInfo\";\r\nimport QuestionTextareaConf, {\r\n  QuestionTextareaPropsType,\r\n} from \"./QuestionTextarea\";\r\nimport QuestionRadioConf, { QuestionRadioPropsType, QuestionRadioStatPropsType } from \"./QuestionRadio\";\r\nimport QuestionCheckboxConf, {\r\n  QuestionCheckboxPropsType,QuestionCheckboxStatPropsType\r\n} from \"./QuestionCheckbox\";\r\n\r\nexport type ComponentPropsType = QuestionInputPropsType &\r\nQuestionTitlePropsType &\r\nQuestionParagraphPropsType &\r\nQuestionInfoPropsType &\r\nQuestionTextareaPropsType &\r\nQuestionRadioPropsType &\r\nQuestionCheckboxPropsType\r\n\r\n  type ComponentStatPropsType = QuestionRadioStatPropsType & QuestionCheckboxStatPropsType\r\n\r\nexport type ComponentConfType = {\r\n  title: string;\r\n  type: string;\r\n  Component: FC<ComponentPropsType>;\r\n  PropComponent: FC<ComponentPropsType>;\r\n  defaultProps: ComponentPropsType;\r\n  StatComponent?: FC<ComponentStatPropsType>\r\n};\r\n\r\nconst componentConfList: ComponentConfType[] = [\r\n  QuestionInputConf,\r\n  QuestionTitleConf,\r\n  QuestionParagraphConf,\r\n  QuestionInfoConf,\r\n  QuestionTextareaConf,\r\n  QuestionRadioConf,\r\n  QuestionCheckboxConf,\r\n];\r\n\r\nexport const componentConfGroup = [\r\n  {\r\n    groupId: \"text\",\r\n    groupName: \"文本显示\",\r\n    components: [QuestionInfoConf, QuestionTitleConf, QuestionParagraphConf],\r\n  },\r\n  {\r\n    groupId: \"input\",\r\n    groupName: \"用户输入\",\r\n    components: [QuestionInputConf, QuestionTextareaConf],\r\n  },\r\n  {\r\n    groupId: \"chooseGroup\",\r\n    groupName: \"用户选择\",\r\n    components: [QuestionRadioConf, QuestionCheckboxConf],\r\n  },\r\n];\r\n\r\nexport function getComponentConfByType(type: string) {\r\n  return componentConfList.find((c) => c.type === type);\r\n}\r\n","import { useSelector } from \"react-redux\";\r\nimport { StateType } from \"../store\";\r\nimport { ComponentsStateType } from \"../store/ComponentsReducer\";\r\n\r\nfunction useGetComponentInfo() {\r\n  const components = useSelector<StateType>(\r\n    (state) => state.components.present\r\n  ) as ComponentsStateType;\r\n  const { componentList = [], selectedId, copiedComponent } = components;\r\n\r\n  const selectedComponent=componentList.find(c=>c.fe_id==selectedId);\r\n\r\n  return {\r\n    componentList,\r\n    selectedId,\r\n    selectedComponent,\r\n    copiedComponent\r\n  };\r\n}\r\nexport default useGetComponentInfo;\r\n","import { UseSelector, useSelector } from \"react-redux\";\r\nimport type { StateType } from \"../store\";\r\nimport type { PageInfoType } from \"../store/pageInfoReducer\";\r\n\r\nfunction useGetPageInfo(){\r\n    const pageInfo=useSelector<StateType>(state=>state.pageInfo) as PageInfoType;\r\n    return pageInfo;\r\n}\r\n\r\nexport default useGetPageInfo","import React, { FC, useEffect, useState } from \"react\";\r\nimport { useParams } from \"react-router-dom\";\r\nimport { getQuestionService } from \"../services/question\";\r\nimport { useRequest } from \"ahooks\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { resetComponents } from \"../store/ComponentsReducer\";\r\nimport { resetPageInfo } from \"../store/pageInfoReducer\";\r\n\r\nfunction useLoadQuestionData() {\r\n  const { id = \"\" } = useParams();\r\n  const dispatch = useDispatch();\r\n  useEffect(() => {\r\n    run(id);\r\n  }, [id]);\r\n\r\n  async function load(id: string) {\r\n    if (!id) throw new Error(\"没有问卷ID\");\r\n    const data = await getQuestionService(id);\r\n    return data;\r\n  }\r\n\r\n  const { loading, data, error, run } = useRequest(load, { manual: true });\r\n\r\n  useEffect(() => {\r\n    if (!data) return;\r\n    const {\r\n      title = \"\",\r\n      desc = \"\",\r\n      js = \"\",\r\n      css = \"\",\r\n      isPublished = false,\r\n      componentList = [],\r\n    } = data;\r\n    let selectedId = \"\";\r\n    if (componentList.length > 0) {\r\n      selectedId = componentList[0].fe_id;\r\n    }\r\n    dispatch(\r\n      resetComponents({ componentList, selectedId, copiedComponent: null })\r\n    );\r\n    dispatch(resetPageInfo({ title, desc, js, css, isPublished }));\r\n  }, [data]);\r\n  return { loading, data, error };\r\n}\r\nexport default useLoadQuestionData;\r\n"],"names":["QuestionInputDefaultProps","title","placeholder","Paragraph","Typography","props","_jsxs","children","_jsx","strong","Input","type","Component","PropComponent","onChange","disabled","form","Form","useForm","useEffect","setFieldsValue","layout","initialValues","onValuesChange","getFieldsValue","Item","label","name","rules","required","message","defaultProps","QuestionTitleDefaultProps","text","level","isCenter","Title","style","textAlign","fontSize","genFontSize","height","marginTop","marginBottom","genMarginBottom","Select","options","value","valuePropName","Checkbox","QuestionParagraphDefaultProps","textList","split","map","index","TextArea","QuestionInfoDefaultProps","desc","descTextList","t","QuestionTextareaDefaultProps","QuestionRadioDefaultProps","isVertical","Radio","Space","direction","opt","newValues","filter","forEach","nanoid","List","fields","_ref","add","remove","_Fragment","_ref2","key","align","validator","_","num","Promise","resolve","reject","Error","MinusCircleOutlined","onClick","Button","icon","PlusOutlined","block","_ref3","StatComponent","stat","sum","useMemo","s","i","count","width","ResponsiveContainer","PieChart","Pie","dataKey","data","cx","cy","outerRadius","fill","concat","toFixed","Cell","STAT_COLORS","Tooltip","QuestionCheckboxDefaultProps","list","checked","BarChart","margin","top","right","left","bottom","CartesianGrid","strokeDasharray","XAxis","YAxis","Bar","componentConfList","QuestionInputConf","QuestionTitleConf","QuestionParagraphConf","QuestionInfoConf","QuestionTextareaConf","QuestionRadioConf","QuestionCheckboxConf","componentConfGroup","groupId","groupName","components","getComponentConfByType","find","c","useSelector","state","present","componentList","selectedId","copiedComponent","selectedComponent","fe_id","pageInfo","id","useParams","dispatch","useDispatch","run","loading","error","useRequest","async","getQuestionService","manual","js","css","isPublished","length","resetComponents","resetPageInfo"],"sourceRoot":""}